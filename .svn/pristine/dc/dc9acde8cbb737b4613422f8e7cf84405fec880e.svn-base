using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using VMP.Library;

namespace VMP_1._0.User
{
    public partial class vmpUsrVendor4 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (Session["UserId"] == null)
            {
                Response.Redirect("~/Login.aspx");
            }
            if (!IsPostBack)
            {
                if (Request.QueryString["VId"] != null)
                {
                    if (Request.QueryString["VId"].ToString().Contains("'"))
                    {
                        Response.Redirect("vmpUsrVendor1.aspx");
                    }
                    else if (!dbLibrary.isValidVendor(Request.QueryString["VId"]))
                    {
                        Response.Redirect("vmpUsrVendor1.aspx");
                    }
                    loadStepsProgress();
                    getPrimaryOwner();
                    loadAllValues();
                }
                else
                {
                    radAS.Enabled = false;
                    radNS.Enabled = false;
                    txtFirstName.Enabled = false;
                    txtLastName.Enabled = false;
                }
            }
        }

        private void getPrimaryOwner()
        {
            string qur = dbLibrary.idBuildQuery("proc_getOwners",Request.QueryString["VId"]);
            DataSet ds = dbLibrary.idGetCustomResult(qur);
            if(ds.Tables[0].Rows.Count>0)
            {
                if((bool)ds.Tables[0].Rows[0]["applicationSigned"])
                {
                    radAS.Checked = true;
                    radNS.Checked = false;
                }
                else
                {
                    radAS.Checked = false;
                    radNS.Checked = true;
                }
                txtFirstName.Text = ds.Tables[0].Rows[0]["ownerFirstName"].ToString();
                txtLastName.Text= ds.Tables[0].Rows[0]["ownerLastName"].ToString();
            }
            radAS.Enabled = false;
            radNS.Enabled = false;
            txtFirstName.Enabled = false;
            txtLastName.Enabled = false;

            //Load DropDown
            if(ds.Tables[1].Rows.Count>0)
            {
                ddlOwners.DataTextField = "Name";
                ddlOwners.DataValueField = "Name";
                ddlOwners.DataSource = ds.Tables[1];
                ddlOwners.DataBind();
            }
            ddlOwners.Items.Insert(ddlOwners.Items.Count, new ListItem("Other", "Other"));
        }

        private void loadAllValues()
        {
            string qur = "select * from BusinessStructure where vendorID=" + Request.QueryString["VId"];
            DataSet ds = dbLibrary.idGetCustomResult(qur);
            if (ds.Tables[0].Rows.Count > 0)
            {
                //Corporation 
                radCorp.Checked = (bool)ds.Tables[0].Rows[0]["corporation"];
                if(radCorp.Checked)
                {
                    radCorp_CheckedChanged(radCorp.Checked, EventArgs.Empty);
                }
                if ((bool)ds.Tables[0].Rows[0]["corporationArticleYes"])
                {
                    radArticles.Items[0].Selected = true;
                    radArticles.Items[1].Selected = false;
                    radArticles_SelectedIndexChanged(radArticles.SelectedIndex, EventArgs.Empty);
                }
                else
                {
                    radArticles.Items[1].Selected = true;
                    radArticles.Items[0].Selected = false;
                }
                //Corporate Documents
                ddlOwners.SelectedValue = ds.Tables[0].Rows[0]["incorporator"].ToString();
                if(ddlOwners.SelectedValue=="Other")
                {
                    divOther.Attributes.Add("style", "display:block;");
                    txtOther.Text = ds.Tables[0].Rows[0]["incorporatorOther"].ToString();
                }
                else
                {
                    divOther.Attributes.Add("style", "display:none;");
                }
                txtDate.Text= ds.Tables[0].Rows[0]["incorporationDate"].ToString()!=""? DateTime.Parse(ds.Tables[0].Rows[0]["incorporationDate"].ToString()).ToString("MM/dd/yyyy") : "";
                txtShares.Text = ds.Tables[0].Rows[0]["noOfShares"].ToString();
                if((bool)ds.Tables[0].Rows[0]["fileNumbers"])
                {
                    radFileYes.Checked = true;
                    radFileNo.Checked = false;
                }
                else
                {
                    radFileNo.Checked = true;
                    radFileYes.Checked = false;
                }

                //Partnership
                radPartnership.Checked = (bool)ds.Tables[0].Rows[0]["partnership"];
                if(radPartnership.Checked)
                {
                    radPartnership_CheckedChanged(radPartnership.Checked, EventArgs.Empty);
                }
                if ((bool)ds.Tables[0].Rows[0]["partnershipAgreement"])
                {
                    chkPartnershipList.Items[0].Selected = true;
                }
                else
                {
                    chkPartnershipList.Items[0].Selected = false;
                }
                if ((bool)ds.Tables[0].Rows[0]["partCertAssumedName"])
                {
                    chkPartnershipList.Items[1].Selected = true;
                }
                else
                {
                    chkPartnershipList.Items[1].Selected = false;
                }
                if ((bool)ds.Tables[0].Rows[0]["partPersonalName"])
                {
                    chkPartnershipList.Items[2].Selected = true;
                }
                else
                {
                    chkPartnershipList.Items[2].Selected = false;
                }
                radProprietorship.Checked = (bool)ds.Tables[0].Rows[0]["proprietorship"];
                if(radProprietorship.Checked)
                {
                    radProprietorship_CheckedChanged(radProprietorship.Checked, EventArgs.Empty);
                }
                if ((bool)ds.Tables[0].Rows[0]["propCertAssumedName"])
                {
                    radProprietorshipList.Items[0].Selected = true;
                }
                else
                {
                    chkPartnershipList.Items[0].Selected = false;
                }

                if ((bool)ds.Tables[0].Rows[0]["propPersonalName"])
                {
                    radProprietorshipList.Items[1].Selected = true;
                }
                else
                {
                    chkPartnershipList.Items[1].Selected = false;
                }
                radNonProfit.Checked = (bool)ds.Tables[0].Rows[0]["nonProfit"];
                radLLC.Checked = (bool)ds.Tables[0].Rows[0]["llc"];
                radBrokerage.Checked = (bool)ds.Tables[0].Rows[0]["brokerage"];
                rad3rdParty.Checked = (bool)ds.Tables[0].Rows[0]["thirdPartyLessor"];
                radMfg.Checked = (bool)ds.Tables[0].Rows[0]["mfgRep"];
                if ((bool)ds.Tables[0].Rows[0]["mfgRepArticleYes"])
                {
                    radmfgArticles.Items[0].Selected = true;
                    radmfgArticles.Items[1].Selected = false;
                    radMfg_CheckedChanged(radMfg.Checked, EventArgs.Empty);
                }
                else
                {
                    radmfgArticles.Items[1].Selected = true;
                    radmfgArticles.Items[0].Selected = false;
                }
                radOther.Checked = (bool)ds.Tables[0].Rows[0]["other"];
            }
        }

        private void loadStepsProgress()
        {
            divStep1.Attributes.Add("class", "col-xs-3 bs-wizard-step complete");
            divStep2.Attributes.Add("class", "col-xs-3 bs-wizard-step complete");
            divStep3.Attributes.Add("class", "col-xs-3 bs-wizard-step complete");
            divStep4.Attributes.Add("class", "col-xs-3 bs-wizard-step active");
        }

        protected void btnBack_Click(object sender, EventArgs e)
        {
            Response.Redirect("vmpUsrVendor3a.aspx?VId=" + Request.QueryString["VId"]);
        }

        protected void lnkStep1_Click(object sender, EventArgs e)
        {
            Response.Redirect("vmpUsrVendor1.aspx?VId=" + Request.QueryString["VId"]);
        }

        protected void lnkStep2_Click(object sender, EventArgs e)
        {
            Response.Redirect("vmpUsrVendor2.aspx?VId=" + Request.QueryString["VId"]);
        }

        protected void lnkStep3_Click(object sender, EventArgs e)
        {
            Response.Redirect("vmpUsrVendor3.aspx?VId=" + Request.QueryString["VId"]);
        }

        protected void radCorp_CheckedChanged(object sender, EventArgs e)
        {
            loadDiv();
        }

        protected void radPartnership_CheckedChanged(object sender, EventArgs e)
        {
            loadDiv();
        }

        protected void radProprietorship_CheckedChanged(object sender, EventArgs e)
        {
            loadDiv();
        }

        protected void radNonProfit_CheckedChanged(object sender, EventArgs e)
        {
            loadDiv();
        }

        protected void radLLC_CheckedChanged(object sender, EventArgs e)
        {
            loadDiv();
        }
        private void loadDiv()
        {
            if (radCorp.Checked == true)
            {
                divArticles.Attributes.Add("style", "display:block");
            }
            else
            {
                radArticles.SelectedIndex = -1;
                divArticles.Attributes.Add("style", "display:none");
                divCD.Attributes.Add("style", "display:none");
            }
            if (radPartnership.Checked == true)
            {
                divPartnership.Attributes.Add("style", "display:block");
                divCD.Attributes.Add("style", "display:none");
            }
            else
            {
                divPartnership.Attributes.Add("style", "display:none");
            }
            if (radProprietorship.Checked == true)
            {
                divProprietorship.Attributes.Add("style", "display:block");
                divCD.Attributes.Add("style", "display:none");
            }
            else
            {
                divProprietorship.Attributes.Add("style", "display:none");
            }
        }

        protected void radArticles_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (radArticles.Items[0].Selected)
            {
                divCD.Attributes.Add("style", "display:block");
            }
            else
            {
                divCD.Attributes.Add("style", "display:none");
            }
        }

        private void loadBusinessdiv()
        {
            if (radMfg.Checked == true)
            {
                divOtherBusiness.Attributes.Add("style", "display:block");
                radmfgArticles.Items[1].Selected = true;
            }
            else
            {
                radmfgArticles.SelectedIndex = -1;
                divOtherBusiness.Attributes.Add("style", "display:none");
            }
        }

        protected void radMfg_CheckedChanged(object sender, EventArgs e)
        {
            loadBusinessdiv();
        }

        protected void rad3rdParty_CheckedChanged(object sender, EventArgs e)
        {
            loadBusinessdiv();
        }

        protected void radBrokerage_CheckedChanged(object sender, EventArgs e)
        {
            loadBusinessdiv();
        }

        protected void radOther_CheckedChanged(object sender, EventArgs e)
        {
            loadBusinessdiv();
        }

        protected void btnSaveProceed_Click(object sender, EventArgs e)
        {
            string qur = string.Empty;
            if (hdnbsId.Value != string.Empty)
            {
                //Update Business Structure
                qur = dbLibrary.idBuildQuery("[proc_VendorDetails4]", "Update", hdnbsId.Value, Request.QueryString["VId"], radCorp.Checked.ToString(), radArticles.SelectedValue == "Yes" ? "1" : "0", ddlOwners.SelectedValue != "Other" ? ddlOwners.SelectedValue : "Other", ddlOwners.SelectedValue == "Other" ? txtOther.Text.Trim() : string.Empty, txtDate.Text, txtShares.Text.Trim(), radFileYes.Checked == true ? "1" : "0", radPartnership.Checked.ToString(), chkPartnershipList.Items[0].Selected.ToString(), chkPartnershipList.Items[1].Selected.ToString(), chkPartnershipList.Items[2].Selected.ToString(), radProprietorship.Checked.ToString(), radProprietorshipList.Items[0].Selected.ToString(), radProprietorshipList.Items[1].Selected.ToString(), radNonProfit.Checked.ToString(), radLLC.Checked.ToString(), radBrokerage.Checked.ToString(), rad3rdParty.Checked.ToString(), radMfg.Checked.ToString(), radmfgArticles.SelectedValue == "Yes" ? "1" : "0", radOther.Checked.ToString(),Session["UserId"].ToString());
            }
            else
            {
                //Insert Business Structure
                qur = dbLibrary.idBuildQuery("[proc_VendorDetails4]", "Insert", "", Request.QueryString["VId"], radCorp.Checked.ToString(), radArticles.SelectedValue == "Yes" ? "1" : "0", ddlOwners.SelectedValue != "Other" ? ddlOwners.SelectedValue : "Other", ddlOwners.SelectedValue == "Other" ? txtOther.Text.Trim() : string.Empty, txtDate.Text, txtShares.Text.Trim(), radFileYes.Checked == true ? "1" : "0", radPartnership.Checked.ToString(), chkPartnershipList.Items[0].Selected.ToString(), chkPartnershipList.Items[1].Selected.ToString(), chkPartnershipList.Items[2].Selected.ToString(), radProprietorship.Checked.ToString(), radProprietorshipList.Items[0].Selected.ToString(), radProprietorshipList.Items[1].Selected.ToString(), radNonProfit.Checked.ToString(), radLLC.Checked.ToString(), radBrokerage.Checked.ToString(), rad3rdParty.Checked.ToString(), radMfg.Checked.ToString(), radmfgArticles.SelectedValue == "Yes" ? "1" : "0", radOther.Checked.ToString(), Session["UserId"].ToString());

            }
            dbLibrary.idExecute(qur);
            Response.Redirect("vmpUsrHome.aspx");
        }
    }
}