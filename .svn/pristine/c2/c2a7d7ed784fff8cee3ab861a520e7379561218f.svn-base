using System;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using VMP.Library;

namespace VMP_1._0.User
{
    public partial class manageVendor : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (Session["UserId"] == null)
            {
                Response.Redirect("~/Login.aspx");
            }
            if (!IsPostBack)
            {
                loadEDR();
            }
        }

        private void loadEDR()
        {
            string qur = "EXEC [proc_getEDR]";
            DataSet dsEDR = dbLibrary.idGetCustomResult(qur);
            if (dsEDR != null)
            {
                chkEDR.DataValueField = "ClassificationId";
                chkEDR.DataTextField = "ClassificationDesc";
                chkEDR.DataSource = dsEDR;
                chkEDR.DataBind();
            }
        }

        private void loadSpecialist()
        {
            string qur = "Exec [proc_getUserList]";
            DataSet ds = dbLibrary.idGetCustomResult(qur);
            ddlSpecialist.DataSource = ds;
            ddlSpecialist.DataTextField = "Name";
            ddlSpecialist.DataValueField = "userId";
            ddlSpecialist.DataBind();
        }

        protected void radSearchVN_CheckedChanged(object sender, EventArgs e)
        {
            if (radSearchVN.Checked)
            {
                divSearchV.Attributes.Add("style", "display:block");
                divSearchS.Attributes.Add("style", "display:none");
                txtSearch.Attributes.Add("Placeholder", "Vendor Name");
                RequiredFieldValidator1.ValidationGroup = "g";
            }
            else
            {
                divSearchV.Attributes.Add("style", "display:none");
                divSearchS.Attributes.Add("style", "display:block");
            }
            grdSearchResult.Visible = false;
            divButtons.Attributes.Add("style", "display:none");
            divAccordions.Attributes.Add("style", "display:none");
        }

        protected void radSearchSpecialist_CheckedChanged(object sender, EventArgs e)
        {
            loadSpecialist();
            if (radSearchSpecialist.Checked)
            {
                divSearchS.Attributes.Add("style", "display:block");
                divSearchV.Attributes.Add("style", "display:none");
                RequiredFieldValidator1.ValidationGroup = "h";
                ddlSpecialist.SelectedValue = Session["UserId"].ToString();
            }
            else
            {
                divSearchS.Attributes.Add("style", "display:none");
                divSearchV.Attributes.Add("style", "display:block");
            }
            grdSearchResult.Visible = false;
            divButtons.Attributes.Add("style", "display:none");
            divAccordions.Attributes.Add("style", "display:none");
        }

        protected void radSearchLName_CheckedChanged(object sender, EventArgs e)
        {
            if (radSearchLName.Checked)
            {
                divSearchV.Attributes.Add("style", "display:block");
                divSearchS.Attributes.Add("style", "display:none");
                txtSearch.Attributes.Add("Placeholder", "Specialist Name");
                RequiredFieldValidator1.ValidationGroup = "g";
            }
            else
            {
                divSearchV.Attributes.Add("style", "display:none");
                divSearchS.Attributes.Add("style", "display:block");
            }
            grdSearchResult.Visible = false;
            divButtons.Attributes.Add("style", "display:none");
            divAccordions.Attributes.Add("style", "display:none");
        }

        protected void btnSearch_Click(object sender, EventArgs e)
        {
            string searchby = string.Empty;
            string criteria = string.Empty;
            if (radSearchVN.Checked)
            {
                searchby = "vendorName";
                criteria = txtSearch.Text;
            }
            else if (radSearchSpecialist.Checked)
            {
                searchby = "specialistName";
                criteria = ddlSpecialist.SelectedValue;
            }
            else if (radSearchLName.Checked)
            {
                searchby = "primaryOwner";
                criteria = txtSearch.Text;
            }

            string qur = dbLibrary.idBuildQuery("[proc_getSearchResult]", searchby, criteria);
            DataSet ds = dbLibrary.idGetCustomResult(qur);
            if (ds != null)
            {
                grdSearchResult.DataSource = ds;
                grdSearchResult.DataBind();
                grdSearchResult.Visible = true;
                ViewState["gridData"] = ds;
            }
            divButtons.Attributes.Add("style", "display:none");
            divAccordions.Attributes.Add("style", "display:none");
        }

        protected void grdSearchResult_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                e.Row.Attributes["onmouseover"] = "this.style.cursor='pointer';this.style.textDecoration='underline';";
                e.Row.Attributes["onmouseout"] = "this.style.textDecoration='none';";
                e.Row.Attributes["onclick"] = Page.ClientScript.GetPostBackClientHyperlink(grdSearchResult, "Select$" + e.Row.RowIndex);
                e.Row.ToolTip = "Click to select this row.";
            }
        }

        protected void grdSearchResult_SelectedIndexChanged(object sender, EventArgs e)
        {
            foreach (GridViewRow row in grdSearchResult.Rows)
            {
                if (row.RowIndex == grdSearchResult.SelectedIndex)
                {
                    row.BackColor = ColorTranslator.FromHtml("#6192d3");
                    row.ForeColor = Color.White;
                    row.ToolTip = string.Empty;
                    btnEdit.CommandArgument = grdSearchResult.SelectedDataKey.Value.ToString();
                    divButtons.Attributes.Add("style", "display:block");
                    divAccordions.Attributes.Add("style", "display:block");

                    // Load Log
                    string qur = dbLibrary.idBuildQuery("[proc_getVendorLog]", grdSearchResult.SelectedDataKey.Value.ToString());
                    DataSet ds = dbLibrary.idGetCustomResult(qur);
                    if (ds != null)
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            vendorNameLog.InnerText = ds.Tables[0].Rows[0]["vendorName"].ToString();
                            vendorNameStatus.InnerText = ds.Tables[0].Rows[0]["vendorName"].ToString();
                        }
                        grdVLog.DataSource = ds;
                        grdVLog.DataBind();
                        ViewState["log"] = ds;
                    }

                    //Load Status

                }
                else
                {
                    row.BackColor = ColorTranslator.FromHtml("#FFFFFF");
                    row.ForeColor = Color.Black;
                    row.ToolTip = "Click to select this row.";
                }
            }
        }

        protected void grdSearchResult_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            grdSearchResult.PageIndex = e.NewPageIndex;
            grdSearchResult.DataSource = (DataSet)ViewState["log"];
            grdSearchResult.DataBind();
        }

        protected void btnEdit_Click(object sender, EventArgs e)
        {
            Response.Redirect("vmpUsrVendor1.aspx?VId=" + btnEdit.CommandArgument + "&EditMode=True");
        }

        protected void grdVLog_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            grdVLog.PageIndex = e.NewPageIndex;
            grdVLog.DataSource = (DataSet)ViewState["log"];
            grdVLog.DataBind();
        }

        protected void chkCitizen_CheckedChanged(object sender, EventArgs e)
        {

        }

        protected void chkbxTargetGroup_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        protected void chkIndiginess_SelectedIndexChanged(object sender, EventArgs e)
        {

        }
    }
}